# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/LayoutEditor.sln'

steps:
- checkout: self
  path: s/RGB.NET-Layout-Editor

- task: DownloadPipelineArtifact@2
  displayName: 'Download RGB.NET build artifacts'
  inputs:
    buildType: 'specific'
    project: '882fdc71-c09c-4923-8ab0-2cd9fcf0656d'
    definition: '3'
    buildVersionToDownload: 'latest'
    artifactName: 'RGB.NET development build'
    targetPath: '$(Pipeline.Workspace)\s\RGB.NET\bin\net5.0'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Publish Artemis'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(solution)'
    arguments: '--runtime win-x64 --self-contained false --output $(Build.BinariesDirectory) /nowarn:cs1591'
    zipAfterPublish: false
    modifyOutputPath: false

- task: PublishPipelineArtifact@1
  displayName: 'Upload build to Azure Pipelines'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/build'
    artifact: 'Artemis build'
    publishLocation: 'pipeline'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/rgb-net-layout-editor.zip'
    replaceExistingArchive: true

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_SpoinkyNL'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    tagPattern: 'release-v0.*'
    releaseNotesSource: 'inline'
    releaseNotesInline: 'Automated release by Azure Pipelines'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'